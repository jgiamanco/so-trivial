{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jacob\\\\Documents\\\\Quizable\\\\client\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchCategories, startQuiz, submitQuiz, selectAnswer, resetQuiz } from \"./store/quizSlice\";\nimport QuizSetup from \"./components/QuizSetup\";\nimport Quiz from \"./components/Quiz\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    categories,\n    questions,\n    quizId,\n    selectedAnswers,\n    score,\n    loading,\n    error,\n    submitted\n  } = useSelector(state => state.quiz);\n  useEffect(() => {\n    dispatch(fetchCategories());\n  }, [dispatch]);\n  const handleStartQuiz = async (categoryId, difficulty, amount) => {\n    dispatch(startQuiz({\n      category: categoryId,\n      difficulty,\n      amount\n    }));\n  };\n  const handleAnswerSelect = (questionIndex, answer) => {\n    dispatch(selectAnswer({\n      questionIndex,\n      answer\n    }));\n  };\n  const handleSubmit = () => {\n    if (quizId) {\n      dispatch(submitQuiz({\n        quizId,\n        answers: selectedAnswers\n      }));\n    }\n  };\n  const handleReset = () => {\n    dispatch(resetQuiz());\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mt-8\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mt-8 text-red-500\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto px-4 py-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl font-bold text-center mb-8\",\n      children: \"Trivia Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), !questions.length ? /*#__PURE__*/_jsxDEV(QuizSetup, {\n      categories: categories,\n      onStartQuiz: handleStartQuiz\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Quiz, {\n      questions: questions,\n      selectedAnswers: selectedAnswers,\n      score: score,\n      submitted: submitted,\n      onAnswerSelect: handleAnswerSelect,\n      onSubmit: handleSubmit,\n      onReset: handleReset\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"63c7CRKJsVvIH9vu9vQC7slyJcI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","fetchCategories","startQuiz","submitQuiz","selectAnswer","resetQuiz","QuizSetup","Quiz","jsxDEV","_jsxDEV","App","_s","dispatch","categories","questions","quizId","selectedAnswers","score","loading","error","submitted","state","quiz","handleStartQuiz","categoryId","difficulty","amount","category","handleAnswerSelect","questionIndex","answer","handleSubmit","answers","handleReset","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","onStartQuiz","onAnswerSelect","onSubmit","onReset","_c","$RefreshReg$"],"sources":["C:/Users/Jacob/Documents/Quizable/client/src/App.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AppDispatch, RootState } from \"./store/store\";\r\nimport {\r\n  fetchCategories,\r\n  startQuiz,\r\n  submitQuiz,\r\n  selectAnswer,\r\n  resetQuiz,\r\n} from \"./store/quizSlice\";\r\nimport QuizSetup from \"./components/QuizSetup\";\r\nimport Quiz from \"./components/Quiz\";\r\n\r\nconst App: React.FC = () => {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const {\r\n    categories,\r\n    questions,\r\n    quizId,\r\n    selectedAnswers,\r\n    score,\r\n    loading,\r\n    error,\r\n    submitted,\r\n  } = useSelector((state: RootState) => state.quiz);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCategories());\r\n  }, [dispatch]);\r\n\r\n  const handleStartQuiz = async (\r\n    categoryId: number,\r\n    difficulty: string,\r\n    amount: number\r\n  ) => {\r\n    dispatch(startQuiz({ category: categoryId, difficulty, amount }));\r\n  };\r\n\r\n  const handleAnswerSelect = (questionIndex: number, answer: string) => {\r\n    dispatch(selectAnswer({ questionIndex, answer }));\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (quizId) {\r\n      dispatch(submitQuiz({ quizId, answers: selectedAnswers }));\r\n    }\r\n  };\r\n\r\n  const handleReset = () => {\r\n    dispatch(resetQuiz());\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"text-center mt-8\">Loading...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"text-center mt-8 text-red-500\">{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mx-auto px-4 py-8\">\r\n      <h1 className=\"text-4xl font-bold text-center mb-8\">Trivia Quiz</h1>\r\n      {!questions.length ? (\r\n        <QuizSetup categories={categories} onStartQuiz={handleStartQuiz} />\r\n      ) : (\r\n        <Quiz\r\n          questions={questions}\r\n          selectedAnswers={selectedAnswers}\r\n          score={score}\r\n          submitted={submitted}\r\n          onAnswerSelect={handleAnswerSelect}\r\n          onSubmit={handleSubmit}\r\n          onReset={handleReset}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}