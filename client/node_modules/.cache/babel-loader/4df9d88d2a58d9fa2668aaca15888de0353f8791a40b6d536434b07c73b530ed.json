{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jacob\\\\Documents\\\\Quizable\\\\client\\\\src\\\\components\\\\Quiz.tsx\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from \"react\";\nimport he from \"he\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = ({\n  questions,\n  selectedAnswers,\n  score,\n  submitted,\n  onAnswerSelect,\n  onSubmit,\n  onReset\n}) => {\n  _s();\n  // Memoize the shuffled answers so they only get shuffled once\n  const shuffledAnswers = useMemo(() => {\n    return questions.map(question => {\n      const allAnswers = [...question.incorrect_answers, question.correct_answer];\n      return allAnswers.sort(() => Math.random() - 0.5);\n    });\n  }, [questions]); // Only re-compute if questions array changes\n\n  const getButtonStyle = (questionIndex, answer) => {\n    if (!submitted) {\n      return selectedAnswers[questionIndex] === answer ? \"bg-green-500 text-white\" : \"bg-white text-green-500 border-2 border-green-500\";\n    }\n    const currentQuestion = questions[questionIndex];\n    if (answer === currentQuestion.correct_answer) {\n      return \"bg-green-500 text-white\";\n    }\n    if (selectedAnswers[questionIndex] === answer && answer !== currentQuestion.correct_answer) {\n      return \"bg-red-500 text-white\";\n    }\n    return \"bg-white text-green-500 border-2 border-green-500\";\n  };\n  const decodeHtml = text => {\n    if (!text) return \"\";\n    try {\n      return he.decode(text);\n    } catch (error) {\n      console.error(\"Error decoding HTML:\", error);\n      return text;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-4xl mx-auto p-4\",\n    children: [questions.map((question, questionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8 p-4 bg-white rounded-lg shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-lg mb-4\",\n        children: decodeHtml(question.question)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-2 md:grid-cols-4 gap-2\",\n        children: shuffledAnswers[questionIndex].map((answer, answerIndex) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `p-3 rounded-lg transition-colors ${getButtonStyle(questionIndex, answer)}`,\n          onClick: () => !submitted && onAnswerSelect(questionIndex, answer),\n          disabled: submitted,\n          children: decodeHtml(answer)\n        }, answerIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, questionIndex, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)), submitted ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: `text-md mb-4 p-2 rounded mx-auto w-1/2 ${(score !== null && score !== void 0 ? score : 0) / questions.length < 0.4 ? \"bg-red-500 text-white\" : (score !== null && score !== void 0 ? score : 0) / questions.length < 0.8 ? \"bg-yellow-500 text-white\" : \"bg-green-500 text-white\"}`,\n        children: [\"You scored \", score, \" out of \", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onReset,\n        className: \"w-full bg-slate-500 text-xl text-white py-2 px-4 rounded hover:bg-slate-600\",\n        children: \"Create a new quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onSubmit,\n        className: \"w-full bg-slate-500 text-xl text-white py-2 px-4 rounded hover:bg-slate-600\",\n        children: \"Submit Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(Quiz, \"chwJ94yDbXtYYJLWKVUniWPl3HU=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useMemo","he","jsxDEV","_jsxDEV","Quiz","questions","selectedAnswers","score","submitted","onAnswerSelect","onSubmit","onReset","_s","shuffledAnswers","map","question","allAnswers","incorrect_answers","correct_answer","sort","Math","random","getButtonStyle","questionIndex","answer","currentQuestion","decodeHtml","text","decode","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","answerIndex","onClick","disabled","length","_c","$RefreshReg$"],"sources":["C:/Users/Jacob/Documents/Quizable/client/src/components/Quiz.tsx"],"sourcesContent":["import React, { useMemo } from \"react\";\r\nimport { Question } from \"../types\";\r\nimport he from \"he\";\r\n\r\ninterface QuizProps {\r\n  questions: Question[];\r\n  selectedAnswers: string[];\r\n  score: number | null;\r\n  submitted: boolean;\r\n  onAnswerSelect: (questionIndex: number, answer: string) => void;\r\n  onSubmit: () => void;\r\n  onReset: () => void;\r\n}\r\n\r\nconst Quiz: React.FC<QuizProps> = ({\r\n  questions,\r\n  selectedAnswers,\r\n  score,\r\n  submitted,\r\n  onAnswerSelect,\r\n  onSubmit,\r\n  onReset,\r\n}) => {\r\n  // Memoize the shuffled answers so they only get shuffled once\r\n  const shuffledAnswers = useMemo(() => {\r\n    return questions.map((question) => {\r\n      const allAnswers = [\r\n        ...question.incorrect_answers,\r\n        question.correct_answer,\r\n      ];\r\n      return allAnswers.sort(() => Math.random() - 0.5);\r\n    });\r\n  }, [questions]); // Only re-compute if questions array changes\r\n\r\n  const getButtonStyle = (questionIndex: number, answer: string) => {\r\n    if (!submitted) {\r\n      return selectedAnswers[questionIndex] === answer\r\n        ? \"bg-green-500 text-white\"\r\n        : \"bg-white text-green-500 border-2 border-green-500\";\r\n    }\r\n\r\n    const currentQuestion = questions[questionIndex];\r\n    if (answer === currentQuestion.correct_answer) {\r\n      return \"bg-green-500 text-white\";\r\n    }\r\n\r\n    if (\r\n      selectedAnswers[questionIndex] === answer &&\r\n      answer !== currentQuestion.correct_answer\r\n    ) {\r\n      return \"bg-red-500 text-white\";\r\n    }\r\n\r\n    return \"bg-white text-green-500 border-2 border-green-500\";\r\n  };\r\n\r\n  const decodeHtml = (text: string | undefined): string => {\r\n    if (!text) return \"\";\r\n    try {\r\n      return he.decode(text);\r\n    } catch (error) {\r\n      console.error(\"Error decoding HTML:\", error);\r\n      return text;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-4xl mx-auto p-4\">\r\n      {questions.map((question, questionIndex) => (\r\n        <div\r\n          key={questionIndex}\r\n          className=\"mb-8 p-4 bg-white rounded-lg shadow\"\r\n        >\r\n          <p className=\"text-lg mb-4\">{decodeHtml(question.question)}</p>\r\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-2\">\r\n            {shuffledAnswers[questionIndex].map((answer, answerIndex) => (\r\n              <button\r\n                key={answerIndex}\r\n                className={`p-3 rounded-lg transition-colors ${getButtonStyle(\r\n                  questionIndex,\r\n                  answer\r\n                )}`}\r\n                onClick={() =>\r\n                  !submitted && onAnswerSelect(questionIndex, answer)\r\n                }\r\n                disabled={submitted}\r\n              >\r\n                {decodeHtml(answer)}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ))}\r\n\r\n      {submitted ? (\r\n        <div className=\"text-center mb-8\">\r\n          <p\r\n            className={`text-md mb-4 p-2 rounded mx-auto w-1/2 ${\r\n              (score ?? 0) / questions.length < 0.4\r\n                ? \"bg-red-500 text-white\"\r\n                : (score ?? 0) / questions.length < 0.8\r\n                ? \"bg-yellow-500 text-white\"\r\n                : \"bg-green-500 text-white\"\r\n            }`}\r\n          >\r\n            You scored {score} out of {questions.length}\r\n          </p>\r\n          <button\r\n            onClick={onReset}\r\n            className=\"w-full bg-slate-500 text-xl text-white py-2 px-4 rounded hover:bg-slate-600\"\r\n          >\r\n            Create a new quiz\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div className=\"text-center\">\r\n          <button\r\n            onClick={onSubmit}\r\n            className=\"w-full bg-slate-500 text-xl text-white py-2 px-4 rounded hover:bg-slate-600\"\r\n          >\r\n            Submit Quiz\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}