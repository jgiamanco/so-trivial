{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jacob\\\\Documents\\\\Quizable\\\\client\\\\src\\\\components\\\\Quiz.tsx\";\nimport React from \"react\";\nimport he from \"he\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = ({\n  questions,\n  selectedAnswers,\n  score,\n  submitted,\n  onAnswerSelect,\n  onSubmit,\n  onReset\n}) => {\n  const getButtonStyle = (questionIndex, answer) => {\n    if (!submitted) {\n      return selectedAnswers[questionIndex] === answer ? \"bg-green-500 text-white\" : \"bg-white text-green-500 border-2 border-green-500\";\n    }\n    const currentQuestion = questions[questionIndex];\n    if (answer === currentQuestion.correct_answer) {\n      return \"bg-green-500 text-white\";\n    }\n    if (selectedAnswers[questionIndex] === answer && answer !== currentQuestion.correct_answer) {\n      return \"bg-red-500 text-white\";\n    }\n    return \"bg-white text-green-500 border-2 border-green-500\";\n  };\n  const decodeHtml = text => {\n    if (!text) return \"\";\n    try {\n      return he.decode(text);\n    } catch (error) {\n      console.error(\"Error decoding HTML:\", error);\n      return text;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-4xl mx-auto p-4\",\n    children: [questions.map((question, questionIndex) => {\n      const allAnswers = submitted ? [...question.incorrect_answers, question.correct_answer] : [...question.incorrect_answers];\n      const shuffledAnswers = submitted ? allAnswers : allAnswers.sort(() => Math.random() - 0.5);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-8 p-4 bg-white rounded-lg shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4\",\n          children: [\"Question \", questionIndex + 1, \" of \", questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg mb-4\",\n          children: decodeHtml(question.question)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-2 gap-2\",\n          children: shuffledAnswers.map((answer, answerIndex) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `p-3 rounded-lg transition-colors ${getButtonStyle(questionIndex, answer)}`,\n            onClick: () => !submitted && onAnswerSelect(questionIndex, answer),\n            disabled: submitted,\n            children: decodeHtml(answer)\n          }, answerIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, questionIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this);\n    }), submitted ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xl font-bold mb-4\",\n        children: [\"You scored \", score, \" out of \", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onReset,\n        className: \"bg-blue-500 text-white font-bold py-2 px-4 rounded hover:bg-blue-700\",\n        children: \"Create a new quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onSubmit,\n        className: \"bg-blue-500 text-white font-bold py-2 px-4 rounded hover:bg-blue-700\",\n        children: \"Submit Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","he","jsxDEV","_jsxDEV","Quiz","questions","selectedAnswers","score","submitted","onAnswerSelect","onSubmit","onReset","getButtonStyle","questionIndex","answer","currentQuestion","correct_answer","decodeHtml","text","decode","error","console","className","children","map","question","allAnswers","incorrect_answers","shuffledAnswers","sort","Math","random","length","fileName","_jsxFileName","lineNumber","columnNumber","answerIndex","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Jacob/Documents/Quizable/client/src/components/Quiz.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { Question } from \"../types\";\r\nimport he from \"he\";\r\n\r\ninterface QuizProps {\r\n  questions: Question[];\r\n  selectedAnswers: string[];\r\n  score: number | null;\r\n  submitted: boolean;\r\n  onAnswerSelect: (questionIndex: number, answer: string) => void;\r\n  onSubmit: () => void;\r\n  onReset: () => void;\r\n}\r\n\r\nconst Quiz: React.FC<QuizProps> = ({\r\n  questions,\r\n  selectedAnswers,\r\n  score,\r\n  submitted,\r\n  onAnswerSelect,\r\n  onSubmit,\r\n  onReset,\r\n}) => {\r\n  const getButtonStyle = (questionIndex: number, answer: string) => {\r\n    if (!submitted) {\r\n      return selectedAnswers[questionIndex] === answer\r\n        ? \"bg-green-500 text-white\"\r\n        : \"bg-white text-green-500 border-2 border-green-500\";\r\n    }\r\n\r\n    const currentQuestion = questions[questionIndex];\r\n    if (answer === currentQuestion.correct_answer) {\r\n      return \"bg-green-500 text-white\";\r\n    }\r\n\r\n    if (\r\n      selectedAnswers[questionIndex] === answer &&\r\n      answer !== currentQuestion.correct_answer\r\n    ) {\r\n      return \"bg-red-500 text-white\";\r\n    }\r\n\r\n    return \"bg-white text-green-500 border-2 border-green-500\";\r\n  };\r\n\r\n  const decodeHtml = (text: string | undefined): string => {\r\n    if (!text) return \"\";\r\n    try {\r\n      return he.decode(text);\r\n    } catch (error) {\r\n      console.error(\"Error decoding HTML:\", error);\r\n      return text;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-4xl mx-auto p-4\">\r\n      {questions.map((question, questionIndex) => {\r\n        const allAnswers = submitted\r\n          ? [...question.incorrect_answers, question.correct_answer]\r\n          : [...question.incorrect_answers];\r\n\r\n        const shuffledAnswers = submitted\r\n          ? allAnswers\r\n          : allAnswers.sort(() => Math.random() - 0.5);\r\n\r\n        return (\r\n          <div\r\n            key={questionIndex}\r\n            className=\"mb-8 p-4 bg-white rounded-lg shadow\"\r\n          >\r\n            <h2 className=\"text-xl font-bold mb-4\">\r\n              Question {questionIndex + 1} of {questions.length}\r\n            </h2>\r\n            <p className=\"text-lg mb-4\">{decodeHtml(question.question)}</p>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2\">\r\n              {shuffledAnswers.map((answer, answerIndex) => (\r\n                <button\r\n                  key={answerIndex}\r\n                  className={`p-3 rounded-lg transition-colors ${getButtonStyle(\r\n                    questionIndex,\r\n                    answer\r\n                  )}`}\r\n                  onClick={() =>\r\n                    !submitted && onAnswerSelect(questionIndex, answer)\r\n                  }\r\n                  disabled={submitted}\r\n                >\r\n                  {decodeHtml(answer)}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n\r\n      {submitted ? (\r\n        <div className=\"text-center mb-8\">\r\n          <p className=\"text-xl font-bold mb-4\">\r\n            You scored {score} out of {questions.length}\r\n          </p>\r\n          <button\r\n            onClick={onReset}\r\n            className=\"bg-blue-500 text-white font-bold py-2 px-4 rounded hover:bg-blue-700\"\r\n          >\r\n            Create a new quiz\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div className=\"text-center\">\r\n          <button\r\n            onClick={onSubmit}\r\n            className=\"bg-blue-500 text-white font-bold py-2 px-4 rounded hover:bg-blue-700\"\r\n          >\r\n            Submit Quiz\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,EAAE,MAAM,IAAI;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAYpB,MAAMC,IAAyB,GAAGA,CAAC;EACjCC,SAAS;EACTC,eAAe;EACfC,KAAK;EACLC,SAAS;EACTC,cAAc;EACdC,QAAQ;EACRC;AACF,CAAC,KAAK;EACJ,MAAMC,cAAc,GAAGA,CAACC,aAAqB,EAAEC,MAAc,KAAK;IAChE,IAAI,CAACN,SAAS,EAAE;MACd,OAAOF,eAAe,CAACO,aAAa,CAAC,KAAKC,MAAM,GAC5C,yBAAyB,GACzB,mDAAmD;IACzD;IAEA,MAAMC,eAAe,GAAGV,SAAS,CAACQ,aAAa,CAAC;IAChD,IAAIC,MAAM,KAAKC,eAAe,CAACC,cAAc,EAAE;MAC7C,OAAO,yBAAyB;IAClC;IAEA,IACEV,eAAe,CAACO,aAAa,CAAC,KAAKC,MAAM,IACzCA,MAAM,KAAKC,eAAe,CAACC,cAAc,EACzC;MACA,OAAO,uBAAuB;IAChC;IAEA,OAAO,mDAAmD;EAC5D,CAAC;EAED,MAAMC,UAAU,GAAIC,IAAwB,IAAa;IACvD,IAAI,CAACA,IAAI,EAAE,OAAO,EAAE;IACpB,IAAI;MACF,OAAOjB,EAAE,CAACkB,MAAM,CAACD,IAAI,CAAC;IACxB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C,OAAOF,IAAI;IACb;EACF,CAAC;EAED,oBACEf,OAAA;IAAKmB,SAAS,EAAC,uBAAuB;IAAAC,QAAA,GACnClB,SAAS,CAACmB,GAAG,CAAC,CAACC,QAAQ,EAAEZ,aAAa,KAAK;MAC1C,MAAMa,UAAU,GAAGlB,SAAS,GACxB,CAAC,GAAGiB,QAAQ,CAACE,iBAAiB,EAAEF,QAAQ,CAACT,cAAc,CAAC,GACxD,CAAC,GAAGS,QAAQ,CAACE,iBAAiB,CAAC;MAEnC,MAAMC,eAAe,GAAGpB,SAAS,GAC7BkB,UAAU,GACVA,UAAU,CAACG,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;MAE9C,oBACE5B,OAAA;QAEEmB,SAAS,EAAC,qCAAqC;QAAAC,QAAA,gBAE/CpB,OAAA;UAAImB,SAAS,EAAC,wBAAwB;UAAAC,QAAA,GAAC,WAC5B,EAACV,aAAa,GAAG,CAAC,EAAC,MAAI,EAACR,SAAS,CAAC2B,MAAM;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/C,CAAC,eACLjC,OAAA;UAAGmB,SAAS,EAAC,cAAc;UAAAC,QAAA,EAAEN,UAAU,CAACQ,QAAQ,CAACA,QAAQ;QAAC;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC/DjC,OAAA;UAAKmB,SAAS,EAAC,uCAAuC;UAAAC,QAAA,EACnDK,eAAe,CAACJ,GAAG,CAAC,CAACV,MAAM,EAAEuB,WAAW,kBACvClC,OAAA;YAEEmB,SAAS,EAAE,oCAAoCV,cAAc,CAC3DC,aAAa,EACbC,MACF,CAAC,EAAG;YACJwB,OAAO,EAAEA,CAAA,KACP,CAAC9B,SAAS,IAAIC,cAAc,CAACI,aAAa,EAAEC,MAAM,CACnD;YACDyB,QAAQ,EAAE/B,SAAU;YAAAe,QAAA,EAEnBN,UAAU,CAACH,MAAM;UAAC,GAVduB,WAAW;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAWV,CACT;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA,GAvBDvB,aAAa;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAwBf,CAAC;IAEV,CAAC,CAAC,EAED5B,SAAS,gBACRL,OAAA;MAAKmB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BpB,OAAA;QAAGmB,SAAS,EAAC,wBAAwB;QAAAC,QAAA,GAAC,aACzB,EAAChB,KAAK,EAAC,UAAQ,EAACF,SAAS,CAAC2B,MAAM;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC,eACJjC,OAAA;QACEmC,OAAO,EAAE3B,OAAQ;QACjBW,SAAS,EAAC,sEAAsE;QAAAC,QAAA,EACjF;MAED;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,gBAENjC,OAAA;MAAKmB,SAAS,EAAC,aAAa;MAAAC,QAAA,eAC1BpB,OAAA;QACEmC,OAAO,EAAE5B,QAAS;QAClBY,SAAS,EAAC,sEAAsE;QAAAC,QAAA,EACjF;MAED;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACI,EAAA,GA1GIpC,IAAyB;AA4G/B,eAAeA,IAAI;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}