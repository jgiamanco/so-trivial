{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  categories: [],\n  questions: [],\n  quizId: null,\n  selectedAnswers: [],\n  score: null,\n  loading: false,\n  error: null,\n  submitted: false,\n  sessionToken: null\n};\nexport const fetchSessionToken = createAsyncThunk(\"quiz/fetchSessionToken\", async () => {\n  const response = await axios.get(\"https://opentdb.com/api_token.php?command=request\");\n  if (response.data.response_code === 0) {\n    return response.data.token;\n  }\n  throw new Error(\"Failed to fetch session token\");\n});\nexport const fetchCategories = createAsyncThunk(\"quiz/fetchCategories\", async () => {\n  const response = await axios.get(\"http://localhost:5000/api/categories\");\n  return response.data.trivia_categories;\n});\nexport const startQuiz = createAsyncThunk(\"quiz/startQuiz\", async ({\n  category,\n  difficulty,\n  amount,\n  sessionToken\n}) => {\n  const response = await axios.post(\"http://localhost:5000/api/quiz\", {\n    category,\n    difficulty,\n    amount,\n    sessionToken\n  });\n  return response.data;\n});\nexport const submitQuiz = createAsyncThunk(\"quiz/submitQuiz\", async ({\n  quizId,\n  answers\n}) => {\n  const response = await axios.post(`http://localhost:5000/api/quiz/${quizId}/submit`, {\n    answers\n  });\n  return response.data;\n});\nconst quizSlice = createSlice({\n  name: \"quiz\",\n  initialState,\n  reducers: {\n    selectAnswer: (state, action) => {\n      const {\n        questionIndex,\n        answer\n      } = action.payload;\n      state.selectedAnswers[questionIndex] = answer;\n    },\n    resetQuiz: state => {\n      return initialState;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchSessionToken.pending, state => {\n      state.loading = true;\n    }).addCase(fetchSessionToken.fulfilled, (state, action) => {\n      state.loading = false;\n      state.sessionToken = action.payload;\n    }).addCase(fetchSessionToken.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.error.message || \"Failed to fetch session token\";\n    }).addCase(fetchCategories.pending, state => {\n      state.loading = true;\n    }).addCase(fetchCategories.fulfilled, (state, action) => {\n      state.loading = false;\n      state.categories = action.payload;\n    }).addCase(fetchCategories.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.error.message || \"Failed to fetch categories\";\n    }).addCase(startQuiz.pending, state => {\n      state.loading = true;\n    }).addCase(startQuiz.fulfilled, (state, action) => {\n      state.loading = false;\n      state.questions = action.payload.questions;\n      state.quizId = action.payload.quizId;\n      state.selectedAnswers = new Array(action.payload.questions.length).fill(\"\");\n      state.submitted = false;\n      state.score = null;\n    }).addCase(startQuiz.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.error.message || \"Failed to start quiz\";\n    }).addCase(submitQuiz.pending, state => {\n      state.loading = true;\n    }).addCase(submitQuiz.fulfilled, (state, action) => {\n      state.loading = false;\n      state.score = action.payload.score;\n      state.submitted = true;\n    }).addCase(submitQuiz.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.error.message || \"Failed to submit quiz\";\n    });\n  }\n});\nexport const {\n  selectAnswer,\n  resetQuiz\n} = quizSlice.actions;\nexport default quizSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","categories","questions","quizId","selectedAnswers","score","loading","error","submitted","sessionToken","fetchSessionToken","response","get","data","response_code","token","Error","fetchCategories","trivia_categories","startQuiz","category","difficulty","amount","post","submitQuiz","answers","quizSlice","name","reducers","selectAnswer","state","action","questionIndex","answer","payload","resetQuiz","extraReducers","builder","addCase","pending","fulfilled","rejected","message","Array","length","fill","actions","reducer"],"sources":["C:/Users/Jacob/Documents/Quizable/client/src/store/quizSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nimport { Category, Question } from \"../types\";\r\n\r\nexport interface QuizState {\r\n  categories: Category[];\r\n  questions: Question[];\r\n  quizId: string | null;\r\n  selectedAnswers: string[];\r\n  score: number | null;\r\n  loading: boolean;\r\n  error: string | null;\r\n  submitted: boolean;\r\n  sessionToken: string | null;\r\n}\r\n\r\nconst initialState: QuizState = {\r\n  categories: [],\r\n  questions: [],\r\n  quizId: null,\r\n  selectedAnswers: [],\r\n  score: null,\r\n  loading: false,\r\n  error: null,\r\n  submitted: false,\r\n  sessionToken: null,\r\n};\r\n\r\nexport const fetchSessionToken = createAsyncThunk(\r\n  \"quiz/fetchSessionToken\",\r\n  async () => {\r\n    const response = await axios.get(\r\n      \"https://opentdb.com/api_token.php?command=request\"\r\n    );\r\n    if (response.data.response_code === 0) {\r\n      return response.data.token;\r\n    }\r\n    throw new Error(\"Failed to fetch session token\");\r\n  }\r\n);\r\n\r\nexport const fetchCategories = createAsyncThunk(\r\n  \"quiz/fetchCategories\",\r\n  async () => {\r\n    const response = await axios.get(\"http://localhost:5000/api/categories\");\r\n    return response.data.trivia_categories;\r\n  }\r\n);\r\n\r\nexport const startQuiz = createAsyncThunk(\r\n  \"quiz/startQuiz\",\r\n  async ({\r\n    category,\r\n    difficulty,\r\n    amount,\r\n    sessionToken,\r\n  }: {\r\n    category: number;\r\n    difficulty: string;\r\n    amount: number;\r\n    sessionToken: string;\r\n  }) => {\r\n    const response = await axios.post(\"http://localhost:5000/api/quiz\", {\r\n      category,\r\n      difficulty,\r\n      amount,\r\n      sessionToken,\r\n    });\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const submitQuiz = createAsyncThunk(\r\n  \"quiz/submitQuiz\",\r\n  async ({ quizId, answers }: { quizId: string; answers: string[] }) => {\r\n    const response = await axios.post(\r\n      `http://localhost:5000/api/quiz/${quizId}/submit`,\r\n      {\r\n        answers,\r\n      }\r\n    );\r\n    return response.data;\r\n  }\r\n);\r\n\r\nconst quizSlice = createSlice({\r\n  name: \"quiz\",\r\n  initialState,\r\n  reducers: {\r\n    selectAnswer: (state, action) => {\r\n      const { questionIndex, answer } = action.payload;\r\n      state.selectedAnswers[questionIndex] = answer;\r\n    },\r\n    resetQuiz: (state) => {\r\n      return initialState;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchSessionToken.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(fetchSessionToken.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.sessionToken = action.payload;\r\n      })\r\n      .addCase(fetchSessionToken.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message || \"Failed to fetch session token\";\r\n      })\r\n      .addCase(fetchCategories.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(fetchCategories.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.categories = action.payload;\r\n      })\r\n      .addCase(fetchCategories.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message || \"Failed to fetch categories\";\r\n      })\r\n      .addCase(startQuiz.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(startQuiz.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.questions = action.payload.questions;\r\n        state.quizId = action.payload.quizId;\r\n        state.selectedAnswers = new Array(action.payload.questions.length).fill(\r\n          \"\"\r\n        );\r\n        state.submitted = false;\r\n        state.score = null;\r\n      })\r\n      .addCase(startQuiz.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message || \"Failed to start quiz\";\r\n      })\r\n      .addCase(submitQuiz.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(submitQuiz.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.score = action.payload.score;\r\n        state.submitted = true;\r\n      })\r\n      .addCase(submitQuiz.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message || \"Failed to submit quiz\";\r\n      });\r\n  },\r\n});\r\n\r\nexport const { selectAnswer, resetQuiz } = quizSlice.actions;\r\nexport default quizSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}