{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jacob\\\\Documents\\\\Quizable\\\\client\\\\src\\\\components\\\\Quiz.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = ({\n  questions,\n  selectedAnswers,\n  score,\n  submitted,\n  onAnswerSelect,\n  onSubmit,\n  onReset\n}) => {\n  _s();\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const currentQuestion = questions[currentQuestionIndex];\n  const allAnswers = [...currentQuestion.incorrect_answers, currentQuestion.correct_answer].sort(() => Math.random() - 0.5);\n  const getButtonStyle = answer => {\n    if (!submitted) {\n      return selectedAnswers[currentQuestionIndex] === answer ? \"bg-green-500 text-white\" : \"bg-white text-green-500 border-2 border-green-500\";\n    }\n    if (answer === currentQuestion.correct_answer) {\n      return \"bg-green-500 text-white\";\n    }\n    if (selectedAnswers[currentQuestionIndex] === answer && answer !== currentQuestion.correct_answer) {\n      return \"bg-red-500 text-white\";\n    }\n    return \"bg-white text-green-500 border-2 border-green-500\";\n  };\n  const handleNext = () => {\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n  const handlePrevious = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-2xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-4\",\n        children: [\"Question \", currentQuestionIndex + 1, \" of \", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-lg mb-4\",\n        children: currentQuestion.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-2\",\n        children: allAnswers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `w-full p-3 rounded-lg transition-colors ${getButtonStyle(answer)}`,\n          onClick: () => !submitted && onAnswerSelect(currentQuestionIndex, answer),\n          disabled: submitted,\n          children: answer\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePrevious,\n        disabled: currentQuestionIndex === 0,\n        className: \"bg-gray-500 text-white font-bold py-2 px-4 rounded hover:bg-gray-700 disabled:opacity-50\",\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNext,\n        disabled: currentQuestionIndex === questions.length - 1,\n        className: \"bg-gray-500 text-white font-bold py-2 px-4 rounded hover:bg-gray-700 disabled:opacity-50\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), submitted && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xl font-bold mb-4\",\n        children: [\"You scored \", score, \" out of \", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onReset,\n        className: \"bg-blue-500 text-white font-bold py-2 px-4 rounded hover:bg-blue-700\",\n        children: \"Create a new quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this), !submitted && selectedAnswers.every(answer => answer !== \"\") && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onSubmit,\n        className: \"bg-blue-500 text-white font-bold py-2 px-4 rounded hover:bg-blue-700\",\n        children: \"Submit Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(Quiz, \"/TKtEVk4bXISO4WPmKbHy0C8rGs=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Quiz","questions","selectedAnswers","score","submitted","onAnswerSelect","onSubmit","onReset","_s","currentQuestionIndex","setCurrentQuestionIndex","currentQuestion","allAnswers","incorrect_answers","correct_answer","sort","Math","random","getButtonStyle","answer","handleNext","length","handlePrevious","className","children","fileName","_jsxFileName","lineNumber","columnNumber","question","map","index","onClick","disabled","every","_c","$RefreshReg$"],"sources":["C:/Users/Jacob/Documents/Quizable/client/src/components/Quiz.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Question } from \"../types\";\r\n\r\ninterface QuizProps {\r\n  questions: Question[];\r\n  selectedAnswers: string[];\r\n  score: number | null;\r\n  submitted: boolean;\r\n  onAnswerSelect: (questionIndex: number, answer: string) => void;\r\n  onSubmit: () => void;\r\n  onReset: () => void;\r\n}\r\n\r\nconst Quiz: React.FC<QuizProps> = ({\r\n  questions,\r\n  selectedAnswers,\r\n  score,\r\n  submitted,\r\n  onAnswerSelect,\r\n  onSubmit,\r\n  onReset,\r\n}) => {\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const currentQuestion = questions[currentQuestionIndex];\r\n  const allAnswers = [\r\n    ...currentQuestion.incorrect_answers,\r\n    currentQuestion.correct_answer,\r\n  ].sort(() => Math.random() - 0.5);\r\n\r\n  const getButtonStyle = (answer: string) => {\r\n    if (!submitted) {\r\n      return selectedAnswers[currentQuestionIndex] === answer\r\n        ? \"bg-green-500 text-white\"\r\n        : \"bg-white text-green-500 border-2 border-green-500\";\r\n    }\r\n\r\n    if (answer === currentQuestion.correct_answer) {\r\n      return \"bg-green-500 text-white\";\r\n    }\r\n\r\n    if (\r\n      selectedAnswers[currentQuestionIndex] === answer &&\r\n      answer !== currentQuestion.correct_answer\r\n    ) {\r\n      return \"bg-red-500 text-white\";\r\n    }\r\n\r\n    return \"bg-white text-green-500 border-2 border-green-500\";\r\n  };\r\n\r\n  const handleNext = () => {\r\n    if (currentQuestionIndex < questions.length - 1) {\r\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n    }\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    if (currentQuestionIndex > 0) {\r\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-2xl mx-auto\">\r\n      <div className=\"mb-8\">\r\n        <h2 className=\"text-xl font-bold mb-4\">\r\n          Question {currentQuestionIndex + 1} of {questions.length}\r\n        </h2>\r\n        <p className=\"text-lg mb-4\">{currentQuestion.question}</p>\r\n        <div className=\"space-y-2\">\r\n          {allAnswers.map((answer, index) => (\r\n            <button\r\n              key={index}\r\n              className={`w-full p-3 rounded-lg transition-colors ${getButtonStyle(\r\n                answer\r\n              )}`}\r\n              onClick={() =>\r\n                !submitted && onAnswerSelect(currentQuestionIndex, answer)\r\n              }\r\n              disabled={submitted}\r\n            >\r\n              {answer}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"flex justify-between mb-8\">\r\n        <button\r\n          onClick={handlePrevious}\r\n          disabled={currentQuestionIndex === 0}\r\n          className=\"bg-gray-500 text-white font-bold py-2 px-4 rounded hover:bg-gray-700 disabled:opacity-50\"\r\n        >\r\n          Previous\r\n        </button>\r\n        <button\r\n          onClick={handleNext}\r\n          disabled={currentQuestionIndex === questions.length - 1}\r\n          className=\"bg-gray-500 text-white font-bold py-2 px-4 rounded hover:bg-gray-700 disabled:opacity-50\"\r\n        >\r\n          Next\r\n        </button>\r\n      </div>\r\n\r\n      {submitted && (\r\n        <div className=\"text-center mb-8\">\r\n          <p className=\"text-xl font-bold mb-4\">\r\n            You scored {score} out of {questions.length}\r\n          </p>\r\n          <button\r\n            onClick={onReset}\r\n            className=\"bg-blue-500 text-white font-bold py-2 px-4 rounded hover:bg-blue-700\"\r\n          >\r\n            Create a new quiz\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {!submitted && selectedAnswers.every((answer) => answer !== \"\") && (\r\n        <div className=\"text-center\">\r\n          <button\r\n            onClick={onSubmit}\r\n            className=\"bg-blue-500 text-white font-bold py-2 px-4 rounded hover:bg-blue-700\"\r\n          >\r\n            Submit Quiz\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}